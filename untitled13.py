# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1se869O8mZ2HZuQN6ffcEZ70dFDPa_J94
"""



import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import streamlit as st

# Generate random historical temperature data
np.random.seed(42)
historical_temps = np.random.randint(20, 40, size=30)  # Last 30 days temperatures (in °C)

df_historical = pd.DataFrame({"temperature": historical_temps})
df_historical["day"] = range(1, 31)

# Train a Linear Regression Model
X = df_historical[["day"]]
y = df_historical["temperature"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

# Streamlit App
st.title("Temperature Prediction")
st.write("Predicting daily temperature based on historical data.")

# User Input
day_input = st.number_input("Enter day number (e.g., 31 for prediction)", min_value=1, max_value=100)

if st.button("Predict"):
    prediction = model.predict([[day_input]])
    st.write(f"Predicted temperature for day {day_input}: {prediction[0]:.2f}°C")

# Visualization
plt.figure(figsize=(8, 5))
plt.scatter(df_historical["day"], df_historical["temperature"], color='blue', label="Actual Temperatures")
plt.plot(df_historical["day"], model.predict(df_historical[["day"]]), color='red', linestyle='dashed', label="Trend Line")
plt.xlabel("Day")
plt.ylabel("Temperature (°C)")
plt.title("Historical Temperature Data and Prediction Trend")
plt.legend()
st.pyplot(plt)

pip install streamlit numpy pandas matplotlib scikit-learn